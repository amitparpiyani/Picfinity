<common:LayoutAwarePage
    x:Name="pageRoot"
    x:Class="Picfinity.GroupDetailPage"
    DataContext="{Binding DefaultViewModel, RelativeSource={RelativeSource Self}}"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Picfinity" Loaded="pageRoot_Loaded_1"
    xmlns:common="using:Picfinity.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Page.Resources>

        <!-- Collection of items displayed by this page -->
        <CollectionViewSource
            x:Name="itemsViewSource"
            Source="{Binding Group.StreamPhotos}"  />
    </Page.Resources>

    <!--
        This grid acts as a root panel for the page that defines two rows:
        * Row 0 contains the back button and page title
        * Row 1 contains the rest of the page layout
    -->
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="7" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
    <ProgressBar Name="progressBar" IsIndeterminate="True" />
    <Grid Grid.Row="1"
        Style="{StaticResource LayoutRootStyle}"
        DataContext="{Binding Group}" >

        <Grid.RowDefinitions>
            <RowDefinition Height="140"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- Horizontal scrolling grid used in most view states -->
        <GridView
            x:Name="itemGridView"
            AutomationProperties.AutomationId="ItemGridView"
            AutomationProperties.Name="Items In Group"
            TabIndex="1"
            Grid.RowSpan="2"
            Padding="120,126,120,50"
            ItemsSource="{Binding Source={StaticResource itemsViewSource}}"
            ItemTemplate="{StaticResource Standard250x250ItemTemplate}"
            SelectionMode="None"
            IsSwipeEnabled="false"
            IsItemClickEnabled="True"
            ItemClick="ItemView_ItemClick">
            <GridView.ItemContainerStyle>
                <Style TargetType="FrameworkElement">
                    <Setter Property="Margin" Value="52,0,0,10"/>
                </Style>
            </GridView.ItemContainerStyle>
        </GridView>
            <TextBlock Grid.Row="1" FontSize="35" Margin="60,20,0,0" Name="noResults" Visibility="Collapsed">No Photos found.</TextBlock>
                <!-- Vertical scrolling list only used when snapped -->
        <ListView
            x:Name="itemListView"
            AutomationProperties.AutomationId="ItemListView"
            AutomationProperties.Name="Items In Group"
            TabIndex="1"
            Grid.Row="1" 
            Visibility="Collapsed"
            Padding="10,0,0,60"
            ItemsSource="{Binding Source={StaticResource itemsViewSource}}"
            ItemTemplate="{StaticResource Standard80ItemTemplate}"
            SelectionMode="None"
            IsSwipeEnabled="false" 
            IsItemClickEnabled="True"
            ItemClick="ItemView_ItemClick">

           
        </ListView>

        <!-- Back button and page title -->
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
            <Button x:Name="backButton" Click="GoBack" IsEnabled="{Binding Frame.CanGoBack, ElementName=pageRoot}" Style="{StaticResource BackButtonStyle}"/>
            <TextBlock x:Name="pageTitle" Text="{Binding Title}" Style="{StaticResource PageHeaderTextStyle}" Grid.Column="1" IsHitTestVisible="false"/>
                <StackPanel VerticalAlignment="Center" Grid.Column="2" Width="250" Margin="0,0,20,0" >
                    <Button HorizontalContentAlignment="Left"  Visibility="Collapsed"   Width="250"  Name="currentUser"  BorderThickness="0" Click="currentUserClicked" >
                        <StackPanel  HorizontalAlignment="Left"  Orientation="Horizontal">
                            <Image Width="50" Height="50" VerticalAlignment="Center" Name="currentUserImage"  Source="{Binding user.userpic_url}" ImageFailed="userPicFailed" />
                            <TextBlock Margin="10,0,10,0" VerticalAlignment="Center" Text="{Binding user.fullname}" TextWrapping="Wrap" FontFamily="Segoe UI" FontSize="15" />
                        </StackPanel>
                    </Button>
                    <Popup Name="popupOptions" IsLightDismissEnabled="True"   >
                        <Border HorizontalAlignment="Right" Background="{StaticResource DarkBrush}" Width="230" BorderBrush="Black" BorderThickness="1">
                            <StackPanel>
                                <Button Content="View Profile" HorizontalAlignment="Stretch" BorderThickness="0" HorizontalContentAlignment="Left" Click="CurrentUserProfile" />
                                <Button Content="Upload Photos" HorizontalAlignment="Stretch" BorderThickness="0" HorizontalContentAlignment="Left" Click="CurrentUserUploadPhotos" />
                                <Button Content="Sign Out" HorizontalAlignment="Stretch" BorderThickness="0" HorizontalContentAlignment="Left" Click="CurrentUserSignOut" />
                            </StackPanel>
                        </Border>
                    </Popup>
                </StackPanel>
                <Button Margin="0,0,20,0" Name="loginUser" Click="loginUser_Click_1" BorderThickness="0" Grid.Column="2">
                    <StackPanel   Orientation="Horizontal">
                        <Image Width="50" Height="50" VerticalAlignment="Center" Source="images/userpic.png" />
                        <TextBlock Margin="10,0,0,0" VerticalAlignment="Center" Text="Login" FontFamily="Segoe UI" FontSize="15" />
                    </StackPanel>
                </Button>
            </Grid>

        <VisualStateManager.VisualStateGroups>

            <!-- Visual states reflect the application's view state -->
            <VisualStateGroup x:Name="ApplicationViewStates">
                <VisualState x:Name="FullScreenLandscape"/>
                <VisualState x:Name="Filled"/>

                <!-- The entire page respects the narrower 100-pixel margin convention for portrait -->
                <VisualState x:Name="FullScreenPortrait">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PortraitBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>

                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="itemGridView" Storyboard.TargetProperty="Padding">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="100,126,90,0"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>

                <!--
                    The back button and title have different styles when snapped, and the list representation is substituted
                    for the grid displayed in all other view states
                -->
                <VisualState x:Name="Snapped">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="pageTitle" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedPageHeaderTextStyle}"/>
                        </ObjectAnimationUsingKeyFrames>

                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="itemGridView" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="itemListView" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
    </Grid>
</common:LayoutAwarePage>
